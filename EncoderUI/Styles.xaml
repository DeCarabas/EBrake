<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="WarningBrush" Color="#FFFFE1" />

    <Style TargetType="Button" x:Key="WarningBar">
        <Setter Property="Background" Value="{StaticResource WarningBrush}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Height" Value="auto" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Top" />        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <Grid Background="#02FFFFFF" Grid.Column="1" Height="25" Width="25">
                            <Ellipse x:Name="ellipsebg"
                                 Margin="4"
                                 Stroke="{TemplateBinding Foreground}"
                                 StrokeThickness="0"
                                 VerticalAlignment="Stretch" />
                            <Ellipse x:Name="ellipse"
                                 Margin="4"
                                 Stroke="{TemplateBinding Foreground}"
                                 StrokeThickness="2"
                                 VerticalAlignment="Stretch" />
                            <Rectangle Width="10" Height="10" Fill="{StaticResource appbar_arrow_right}" />
                        </Grid>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
   
    <Style TargetType="TextBlock" x:Key="entryLabel">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="0" Color="Black" BlurRadius="15" />
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0,0,0,30" />
    </Style>
    <Style TargetType="TextBlock" x:Key="settingLabel" BasedOn="{StaticResource entryLabel}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="Margin" Value="10" />
    </Style>
    <Style TargetType="TextBox" x:Key="textEntry">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>
    <Style TargetType="TextBlock" x:Key="textValue">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style TargetType="TabItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="6,2,6,2" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="MinHeight" Value="5" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid x:Name="root" Margin="0,0,15,0">
                        <Label x:Name="unselected" Margin="0" Content="{TemplateBinding Header}" FontSize="26.667" FontWeight="Light">
                            <Label.Foreground>
                                <SolidColorBrush Color="{DynamicResource Gray11}" />
                            </Label.Foreground>
                        </Label>
                        <Label x:Name="selected" Margin="0" Content="{TemplateBinding Header}" FontSize="26.667" FontWeight="Light" Opacity="0">
                            <Label.Foreground>
                                <SolidColorBrush Color="{DynamicResource AccentColor}" />
                            </Label.Foreground>
                        </Label>
                        <Label x:Name="hover" Margin="0" Content="{TemplateBinding Header}" FontSize="26.667" FontWeight="Light" Opacity="0">
                            <Label.Foreground>
                                <SolidColorBrush Color="{DynamicResource Gray3}" />
                            </Label.Foreground>
                        </Label>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Opacity" TargetName="selected" Value="1" />
                            <Setter Property="Opacity" TargetName="unselected" Value="0" />
                            <Setter Property="Opacity" TargetName="hover" Value="0" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="false">
                            <Setter Property="Opacity" TargetName="unselected" Value="1" />
                            <Setter Property="Opacity" TargetName="selected" Value="0" />
                            <Setter Property="Opacity" TargetName="hover" Value="0" />
                        </Trigger>
                        <Trigger  SourceName="root" Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="unselected" Value="0" />
                            <Setter Property="Opacity" TargetName="selected" Value="0" />
                            <Setter Property="Opacity" TargetName="hover" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox Style-->
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="MinHeight"
                Value="26" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource Gray7}" />
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Key="comboToggleStyle"
                                   TargetType="{x:Type ToggleButton}">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource TextBrush}" />
                                <Setter Property="Background"
                                        Value="{DynamicResource GrayBrush7}" />
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource TextBoxBorderBrush}" />
                                <Setter Property="BorderThickness"
                                        Value="1" />
                                <Setter Property="Padding"
                                        Value="3" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                               Storyboard.TargetName="MouseOverBorder">
                                                                    <EasingDoubleKeyFrame KeyTime="0"
                                                                                          Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                               Storyboard.TargetName="PressedBorder">
                                                                    <EasingDoubleKeyFrame KeyTime="0"
                                                                                          Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="CheckStates">
                                                        <VisualState x:Name="Checked">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                               Storyboard.TargetName="CheckedRectangle">
                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                                          Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unchecked" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                               Storyboard.TargetName="FocusRectangle">
                                                                    <EasingDoubleKeyFrame KeyTime="0"
                                                                                          Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unfocused" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Border x:Name="Background"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        Background="{TemplateBinding Background}" />
                                                <Rectangle x:Name="DisabledVisualElement"
                                                           Fill="{DynamicResource WhiteBrush}"
                                                           IsHitTestVisible="false"
                                                           Opacity="0" />
                                                <Border x:Name="MouseOverBorder"
                                                        Background="{DynamicResource GrayBrush8}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        Opacity="0" />
                                                <Border x:Name="PressedBorder"
                                                        Background="{DynamicResource GrayBrush5}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        Opacity="0" />
                                                <Rectangle x:Name="FocusRectangle"
                                                           Stroke="{DynamicResource TextBoxMouseOverInnerBorderBrush}"
                                                           Opacity="0" />
                                                <Rectangle x:Name="CheckedRectangle"
                                                           StrokeThickness="{TemplateBinding BorderThickness}"
                                                           Opacity="0"
                                                           Stroke="{DynamicResource TextBoxMouseOverBorderBrush}" />
                                                <Rectangle x:Name="FocusVisualElement"
                                                           IsHitTestVisible="false"
                                                           Margin="1"
                                                           Stroke="{DynamicResource HighlightBrush}"
                                                           StrokeThickness="1"
                                                           Visibility="Collapsed" />

                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  IsHitTestVisible="false"
                                                                  Margin="{TemplateBinding Padding}"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.45" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="PopupBorder">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>true</DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="DropDownToggle" Grid.Column="1"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              Background="{TemplateBinding Background}"
                                              HorizontalAlignment="Stretch"
                                              HorizontalContentAlignment="Right"
                                              Margin="0"
                                              Style="{DynamicResource comboToggleStyle}"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              VerticalAlignment="Stretch">
                                    <Path x:Name="BtnArrow"
                                          Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                          HorizontalAlignment="Right"
                                          Height="4"
                                          Margin="0,0,6,0"
                                          Stretch="Uniform"
                                          Width="8">
                                        <Path.Fill>
                                            <SolidColorBrush x:Name="BtnArrowColor"
                                                             Color="{DynamicResource Gray3}" />
                                        </Path.Fill>
                                    </Path>
                                </ToggleButton>

                                <TextBox Visibility="Hidden" Name="PART_EditableTextBox"
                                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                         Style="{x:Null}" IsReadOnly="{TemplateBinding IsReadOnly}" Focusable="True" />
                                
                                <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                                  Content="{TemplateBinding SelectionBoxItem}" Name="PART_ContentSite"
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  IsHitTestVisible="false" Margin="{TemplateBinding Padding}" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <Rectangle x:Name="FocusRectangle"
                                   Stroke="{DynamicResource TextBoxMouseOverInnerBorderBrush}"
                                   Opacity="0" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource DisabledWhiteColorBrush}"
                                   IsHitTestVisible="false"
                                   Opacity="0" />
                        <Border x:Name="ValidationErrorElement"
                                BorderBrush="{DynamicResource ControlsValidationBrush}"
                                BorderThickness="1"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{DynamicResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible"
                                                                                   Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>true</DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent"
                                  HorizontalAlignment="Right"
                                  Height="12"
                                  Margin="1,-4,-4,0"
                                  VerticalAlignment="Top"
                                  Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{DynamicResource ValidationBrush5}"
                                      Margin="1,3,0,0" />
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{DynamicResource WhiteColorBrush}"
                                      Margin="1,3,0,0" />
                            </Grid>
                        </Border>
                        <Popup x:Name="PART_Popup"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom">
                            <Border x:Name="PopupBorder"
                                    Effect="{DynamicResource DropShadowBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    HorizontalAlignment="Stretch"
                                    Height="Auto"
                                    BorderBrush="{DynamicResource ComboBoxPopupBrush}"
                                    Background="{DynamicResource WhiteBrush}">
                                <ScrollViewer x:Name="DropDownScrollViewer"
                                              BorderThickness="0"
                                              Margin="2"
                                              Padding="1">
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>       
    
</ResourceDictionary>